let mapleader=","

source $HOME/.config/vim/watch-for-changes.vim
"""""""""""""""""""" NEOBUNDLE
source $HOME/.config/vim/autoload/plug.vim

if filereadable($HOME . "/.config/vim/plugins.vim")
  source $HOME/.config/vim/plugins.vim
endif

"""""""""""""""""""" GLOBAL
filetype plugin indent on
set autoread
set nostartofline
set scrolloff=8
set ttyfast
set background=dark
set relativenumber
set number
set mouse=a
set t_Co=256
syntax on
set encoding=utf-8
set hidden
" set nowrap
set breakindent
set backspace=indent,eol,start
set autoindent
set copyindent
set number
set shiftround
set ignorecase
set smartcase
set hlsearch
set incsearch
set history=1000
set undolevels=1000
set wildignore=*.swp,*.bak
set title
set visualbell
set noerrorbells
set listchars=tab:▸\ ,trail:⊗,nbsp:▹,eol:¬
set list
set nocompatible
set backup
set backupdir=$HOME/.cache/vim
set noswapfile
set fileformats=unix,dos,mac
set laststatus=2
set expandtab
set softtabstop=2 tabstop=2 shiftwidth=2
set ruler
set clipboard=unnamed

"let loaded_matchparen=1 " Don't load matchit.vim (paren/bracket matching)
"set noshowmatch         " Don't match parentheses/brackets
set nocursorline        " Don't paint cursor line
set nocursorcolumn      " Don't paint cursor column
set lazyredraw          " Wait to redraw
"let html_no_rendering=1 " Don't render italic, bold, links in HTML

"let g:jellybeans_background_color_256 = 232
"let g:jellybeans_overrides = { 'SpecialKey': {'ctermfg' : '123', 'guifg': '#b4ecff'},}
let g:gruvbox_contrast_dark = 'hard'
let g:gruvbox_italicize_strings=1
let g:gruvbox_invert_signs=1
"colorscheme wells-colors
hi Conceal ctermfg=200
color dracula
let g:airline_theme='dracula'
autocmd ColorScheme * hi NonText ctermfg=59 ctermbg=235 cterm=NONE guifg=#525563 guibg=#282a36 gui=NONE
autocmd ColorScheme * hi SpecialKey ctermfg=59 ctermbg=235 cterm=NONE guifg=#525563 guibg=#282a36 gui=NONE
autocmd ColorScheme * hi Visual ctermbg=23 cterm=NONE
autocmd ColorScheme * hi javaScriptFunction ctermfg=117 ctermbg=NONE cterm=italic guifg=#8be9fd guibg=NONE gui=italic
autocmd ColorScheme * hi Identifier ctermfg=117 ctermbg=NONE cterm=italic guifg=#8be9fd guibg=NONE gui=italic
autocmd ColorScheme * hi StorageClass ctermfg=117 ctermbg=NONE cterm=NONE guifg=#8be9fd guibg=NONE gui=italic
autocmd ColorScheme * hi rubyConstant ctermfg=81 ctermbg=NONE cterm=NONE guifg=#66d9ef guibg=NONE gui=italic
autocmd ColorScheme * hi rubyBlockParameter ctermfg=215 ctermbg=NONE cterm=NONE guifg=#ffb86c guibg=NONE gui=italic
autocmd ColorScheme * hi rubyRailsUserClass ctermfg=81 ctermbg=NONE cterm=NONE guifg=#66d9ef guibg=NONE gui=italic
autocmd ColorScheme * hi cssURL ctermfg=215 ctermbg=NONE cterm=NONE guifg=#ffb86c guibg=NONE gui=italic
set background=dark

" Make Columns stand out
highlight ColorColumn ctermbg=200
call matchadd('ColorColumn', '\%101v', 100)
" al;skdjaklsjdakl;sdjal;skdjaskl;djaskl;djaskldjalskdjalskjdaskldjaslkjdal;kjdasl;kdjaskldjaskl;dajsl

set fillchars=vert:┃,fold:━
highlight VertSplit cterm=none ctermbg=none ctermfg=247

"""""""""""""""""""" FILES SPECIFIC

au BufRead,BufNewFile *.jsm setfiletype javascript
au BufRead,BufNewFile *.xul setfiletype xml
au BufRead,BufNewFile *.md set filetype=markdown
au BufRead,BufNewFile *.html set filetype=javascript
au BufRead,BufNewFile *.tag set filetype=javascript
au BufRead,BufNewFile *.json set filetype=json
au BufRead,BufNewFile *.adoc set filetype=asciidoc

nnoremap <leader>j :%!jq -S .<CR>
nnoremap <leader>b :%!xxd<CR>

""""""""""""""" pastetoggle
" set pastetoggle=<F3>
map <F3> :set paste!<CR>

"Remove indenting on empty lines
map <F2> :%s/\s*$//g<cr>:noh<cr>''

nmap j gj
nmap k gk

cnoremap <C-a>  <Home>

set incsearch
set ignorecase
set smartcase
set hlsearch
nmap \q :nohlsearch<CR>

nmap <C-e> :e#<CR>

set showcmd

cmap \W !sudo tee % >/dev/null<CR>

" Colorpicker (only for mac)
inoremap <C-C> <C-R>=system('color-picker')<CR>

"""""""""""""""""""" KEYBINDINGS

map cc <leader>c<space>
map  <F6> :setlocal spell! spelllang=en<CR>
map  <F12> :set invhls<CR>
cmap <C-g> <C-u><ESC>
command! -bang W w<bang>
nnoremap <C-n> :bn<CR>
nnoremap <C-p> :bp<CR>

""""""""""""""""""" Tab completion
function! Inserttabwrapper()
    let col = col('.') - 1
    if !col || getline('.')[col - 1] !~ '\k'
        return "\<tab>"
    else
        return "\<c-p>"
    endif
endfunction

" Map <tab> to Inserttabwarpper()
inoremap <tab> <c-r>=Inserttabwrapper()<cr>

" Shift tab to backwards search
inoremap <s-tab> <c-n>

""""""""""""""""""" Strip bad whitespace
function! <SID>StripTrailingWhitespace()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    %s/\s\+$//e
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction
nmap <Leader><space> :call <SID>StripTrailingWhitespace()<CR>

" RAML
autocmd! BufNewFile,BufRead *.raml set filetype=yaml

com! FormatJSON %!jq -S .

" Incsearch
map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)

hi Comment cterm=italic
