set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
setw -g xterm-keys on
set -s escape-time 2                      # fastest command sequences
set -sg repeat-time 0                   # increase repeat timeout
set -g status-bg colour235
#set -s quiet on                           # disable various messages

set -g prefix C-v
#bind C-v send-prefix

# rate limiting
#setw -g c0-change-interval 50
#setw -g c0-change-trigger  75

# uncomment to force vi-style key bindings
# emacs is the default unless $EDITOR or $VISUAL contain 'vi'
#set -g status-keys vi
#setw -g mode-keys vi

set -g history-limit 100000                 # boost history

# edit configuration
bind e new-window -n '~/.tmux.conf' '${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# see https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
if 'which -s reattach-to-user-namespace' 'set -g default-command "tmux rename-window initializing; tmux set -w automatic-rename; reattach-to-user-namespace $SHELL -l"'

# -- display -------------------------------------------------------------------

set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows

setw -g automatic-rename on # rename window to reflect current program
# renumber windows when a window is closed
set -g renumber-windows on

set -g set-titles on                        # set terminal title
set -g set-titles-string '#h ‚ùê #S ‚óè #I #W'

# clear both screen and history
bind -n C-l send-keys C-l \; run 'tmux clear-history'

# activity
set -g monitor-activity on
set -g visual-activity on


# -- navigation ----------------------------------------------------------------

# create new window
bind C-c new-window -c "#{pane_current_path}"

# create new session
bind C-z new-session

# find session
unbind f
unbind C-f
bind C-f choose-session

# split current window vertically, retain current path
bind '"' split-window -h -c "#{pane_current_path}"
bind _ split-window -h -c "#{pane_current_path}"
# split current window horizontally, retain current path
unbind %
bind % split-window -v -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s maximize_pane'

# pane resizing
bind -r H resize-pane -L 2
bind -r C-j resize-pane -D 2
bind -r C-k resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
bind -r C-p previous-window # select previous window
bind -r C-n next-window     # select next window

# unset C-l
unbind C-l

###########################################################################
# Mouse mode is on by default.
# <prefix> M -- to turn it off
# <prefix> m -- to turn it on
#
# As of tmux 2.1, a backward-incompatible change was introduced.
# mode-mouse and mouse-* no longer exist, replaced by simply
# mouse <on|off>. Which is great, and easier, but unfortunately I use
# tmux on systems which I don't foresee going to 2.1+ anytime soon.
# So, time to test versions... this is kind of cheap and hacky, and it
# won't work for 2.2 and beyond, but will work for now. I tried to make
# this more generalized but have not been successful so far.
#

set -g mouse on
bind m set -g mouse on \; display "Mouse ON"
bind M set -g mouse off \; display "Mouse OFF"
# make scrolling with wheels work
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind p paste-buffer  # paste from the top pate buffer
bind P choose-buffer # choose which buffer to paste from

# copy to Mac OSX pasteboard
if 'which -s reattach-to-user-namespace' 'bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'


set -g status-left-length 52
set -g status-right-length 451
set -g status-bg colour241
set -g status-left-style "bg=colour241"
set -g status-right-style "bg=colour241"
set -g status-left '#[bg=colour235,fg=colour214]ÓÇ≤#[fg=colour235,bg=colour214,bold]üç∫ #S#[fg=colour214,bg=colour241,nobold]ÓÇ∞'

set -g window-status-style "fg=colour246,bg=colour241,nobold"
set -g window-status-activity-style "fg=colour255,bg=colour241,bold"
set -g window-status-current-style "bg=colour31"
set -g window-status-last-style "fg=colour248,bg=colour241,bold"

set -g window-status-format " #I #W "
set -g window-status-current-format "#[fg=colour241,nobold]ÓÇ∞#[fg=colour255]#I #[fg=colour255,nobold]#W#[fg=colour31,bg=colour241,nobold]ÓÇ∞#[fg=colour31,nobold]"
set -g status-right '#H#[fg=colour241,bg=colour235]ÓÇ∞'
set -g window-status-separator ''
