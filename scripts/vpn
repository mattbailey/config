#!/bin/bash

PATH=/usr/local/bin:/usr/bin:/usr/sbin:/bin:/sbin:$PATH

# These are just here as an example, you should source them elsewehere
user=''
pass=''
server=''
local_net=''
local_gateway=''
proxy_host=''
profile=''

# All this private information is secured here
. ${PRIVATE}/vpnsettings

# Multi-factor auth number taken as an argument
mfa=$1

# Location of vpn CLI binary
vpn_bin=/opt/cisco/anyconnect/bin/vpn

# This creates the run script for the VPN binary to follow
script=$(mktemp -t vpn)

function vpnon () {
  # Write params to script
  cat << EOF > $script
connect $server
$profile
$user
$pass
$mfa
quit
EOF

  $vpn_bin -s < $script
}

function routing () {
  deny_rule=$(sudo ipfw list | grep deny | cut -d' ' -f 1)
  sudo ipfw delete ${deny_rule}
  sudo route change -net ${local_net} ${local_gateway}
#  ifconfig vboxnet0 &> /dev/null && sudo route -nv change -net 192.168.59 -interface vboxnet0
}

function socks () {
  AUTOSSH_PIDFILE='/tmp/autossh.pid'
  [[ -f ${AUTOSSH_PIDFILE} ]] && kill $(cat ${AUTOSSH_PIDFILE})
  autossh -M 0 -q -f -N -o "ServerAliveInterval 60" -o "ServerAliveCountMax 3" -D 1080 ${proxy_host}
}

function cronmodify () {
  cron_temp=$(mktemp -t cron)
  crontab -l | grep -v ${0} > ${cron_temp}
  echo "*/10 * * * * ${0} SPLIT &> /dev/null" >> ${cron_temp}
  crontab < ${cron_temp}
  rm ${cron_temp}
}

function cronrestore () {
  cron_temp=$(mktemp -t cron)
  crontab -l | grep -v ${0} > ${cron_temp}
  crontab < ${cron_temp}
  rm ${cron_temp}
}

# Main Controller
if [[ $1 == "SPLIT" ]]; then
  routing && cronrestore && cronmodify
elif [[ $1 == "D" ]]; then
  $vpn_bin disconnect
  cronrestore
else
  state=$(${vpn_bin} status | grep 'state: Connected' | wc -l)
  if [[ $state == 3 ]]; then
    routing
  else
    $vpn_bin disconnect
    vpnon && sleep 3 && routing && cronmodify
  fi
fi

rm ${script}
